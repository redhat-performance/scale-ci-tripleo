---
# tasks file for undercloud-prep

- name: Create the message of the day (motd)
  template:
    backup: yes
    src: motd.j2
    dest: /etc/motd

- name: Make sure the motd is displayed when using ssh
  lineinfile:
    path: /etc/ssh/sshd_config
    regexp: "^PrintMotd.*"
    line: "PrintMotd yes"

# Scale Lab Pre-deployment tooling lays down vlans to test network before hand
# Lets remove this to avoid confusion when debugging and to prevent vlan conflicts
- name: Clean validation vlans
  shell: |
    for f in $(grep IPADDR=172 /etc/sysconfig/network-scripts/* | awk -F: '{ print $1 }');
    do
      ifdown $(basename $f | awk -F- '{ print $2 }')
      rm -f $f
    done

- name: Disable epel
  shell: rpm -e epel-release
  ignore_errors: true

- name: Disable beaker repos
  shell: rm -rf /etc/yum.repos.d/beaker-*

- name: Get rhos-release
  get_url:
    url: "{{rhos_release_rpm}}"
    dest: /root/rhos-release.rpm
    validate_certs: false

- name: Install rhos-release
  yum: name=/root/rhos-release.rpm

- name: Setup OSP version to install
  command: "rhos-release {{rhos_release}} -p {{build}} -r {{rhel_version}}"

- name: Install utilities
  yum: name={{item}}
  with_items:
    - tmux
    - screen
    - vim
    - python-virtualenv
    - libguestfs-tools
    - gcc
    - libselinux-python

- name: Deploy .tmux.conf
  copy:
    content: set-option -g allow-rename off
    dest: /root/.tmux.conf

- name: Update Packages
  yum: name=* state=latest

- name: Reboot machine
  shell: "nohup sh -c '( sleep 5 ; shutdown -r now )' &"
  async: 0
  poll: 0
  ignore_errors: true

# 15 minute timeout
- name: Wait for Machine Ready
  local_action:
    module: wait_for
    host: "{{inventory_hostname}}"
    port: 22
    delay: 15
    timeout: 900

- name: Add stack user
  user: name=stack

- name: Creating the /home/stack/.ssh directory on the server
  file:
    path: "/home/stack/.ssh"
    state: directory
    mode: 0700
    owner: stack
    group: stack

- name: Copying the private key to the server
  copy:
    src: "{{ ansible_private_key_file }}"
    dest: "/home/stack/.ssh/id_rsa"
    mode: 0600
    owner: stack
    group: stack

- name: Copying the public key to the server
  copy:
    src: "{{ ansible_public_key_file }}"
    dest: "/home/stack/.ssh/id_rsa.pub"
    mode: 0644
    owner: stack
    group: stack

# Not entirely sure why the password wouldn't take with the initial command
- name: Stack user password
  user:
    name: stack
    update_password: always
    password: "{{stack_password}}"

- name: Sudo for stack user
  shell: |
    echo "stack ALL=(root) NOPASSWD:ALL" | tee -a /etc/sudoers.d/stack
    chmod 0440 /etc/sudoers.d/stack

- name: Setup authorized key upload
  authorized_key:
    user: stack
    key: "{{ lookup('file', ansible_public_key_file) }}"

- name: Setup tripleo directories
  file:
    path: "{{item}}"
    state: directory
    owner: stack
    group: stack
  with_items:
    - /home/stack/images
    - /home/stack/templates
    - /home/stack/templates/environments
    - /home/stack/templates/firstboot
    - /home/stack/templates/nic-configs
    - /home/stack/templates/nic-configs/11/private
    - /home/stack/templates/nic-configs/11/public
    - /home/stack/templates/nic-configs/13/private
    - /home/stack/templates/nic-configs/13/public
    - /home/stack/alderaan-deploy
    - /home/stack/alderaan-deploy/log
    - "{{log_dir}}"

- name: Install tripleo
  yum: name=python-tripleoclient

- name: Install ceph-ansible
  yum:
    name: ceph-ansible
  when: version == "13"

- name: Set hostname
  shell: hostnamectl set-hostname {{ansible_fqdn}}

- name: Set transient hostname
  shell: hostnamectl set-hostname --transient {{ansible_fqdn}}

- name: Fix hosts file
  lineinfile:
    dest: /etc/hosts
    line: "127.0.0.1   {{ansible_fqdn}} {{ansible_hostname}} localhost localhost.localdomain localhost4 localhost4.localdomain4"
    regexp: "127.0.0.1"

- name: Copy undercloud.conf
  template:
    src: "templates/undercloud.{{version}}.conf.j2"
    dest: /home/stack/undercloud.conf
    owner: stack
    group: stack

- name: Deploy private external vlan interface (external_network_setup = 11_private or 13_private)
  template:
    src: templates/ifcfg-vlan.j2
    dest: "/etc/sysconfig/network-scripts/ifcfg-{{undercloud_external_vlan_device}}"
    owner: root
    group: root
  when: external_network_setup == "11_private" or external_network_setup == "13_private"

- name: Turn on private external vlan interface (external_network_setup = 11_private or 13_private)
  shell: ifup {{undercloud_external_vlan_device}}
  when: external_network_setup == "11_private" or external_network_setup == "13_private"

- name: Setup traffic fowarding for private external network (external_network_setup = 11_private or 13_private)
  shell: |
     echo 1 > /proc/sys/net/ipv4/ip_forward
     iptables -t nat -A POSTROUTING -o {{undercloud_public_interface}} -j MASQUERADE
     iptables -A FORWARD -i {{undercloud_public_interface}} -o {{undercloud_external_vlan_device}} -m state --state RELATED,ESTABLISHED -j ACCEPT
     iptables -A FORWARD -i {{undercloud_external_vlan_device}} -o {{undercloud_public_interface}} -j ACCEPT
     iptables-save > /etc/sysconfig/iptables
  when: external_network_setup == "11_private" or external_network_setup == "13_private"
