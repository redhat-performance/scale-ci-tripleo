---
# tasks file for undercloud-prep

# Scale Lab Pre-deployment tooling lays down vlans to test network before hand
# Lets remove this to avoid confusion when debugging and to prevent vlan conflicts
- name: Clean Validation vlans
  shell: |
    for interface in $(ip -o link show | awk '{print $2}' | grep "@"  | awk '{split($0,interface,"@"); print interface[1]}')
    do
      ifdown ${interface}
      rm /etc/sysconfig/network-scripts/ifcfg-${interface}
    done

- name: Disable epel
  shell: rpm -e epel-release
  ignore_errors: true

- name: Disable beaker repos
  shell: rm -rf /etc/yum.repos.d/beaker-*

- name: Add custom repos
  template:
    src: "templates/undercloud-deploy.repo.j2"
    dest: /etc/yum.repos.d/undercloud-deploy.repo
  when: deploy_additional_repos

- name: Get rhos-release
  get_url:
    url: "{{rhos_release_rpm}}"
    dest: /root/rhos-release.rpm
    validate_certs: false

- name: Install rhos-release
  yum: name=/root/rhos-release.rpm

- name: Setup OSP version to install
  command: "rhos-release {{rhos_release}} -r {{rhel_version}}"

- name: Install utilities
  yum: name={{item}}
  with_items:
    - tmux
    - screen
    - vim
    - python-virtualenv
    - libguestfs-tools
    - gcc
    - libselinux-python

- name: Update Packages
  yum: name=* state=latest

- name: Reboot machine
  shell: "nohup sh -c '( sleep 5 ; shutdown -r now )' &"
  async: 0
  poll: 0
  ignore_errors: true

# 8 minute timeout
- name: Wait for Machine Ready
  local_action:
    module: wait_for
    host: "{{inventory_hostname}}"
    port: 22
    delay: 15
    timeout: 480

- name: Add stack user
  user: name=stack

# Not entirely sure why the password wouldn't take with the initial command
- name: Stack user password
  user:
    name: stack
    update_password: always
    password: "{{ansible_ssh_pass}}"

- name: Sudo for stack user
  shell: echo "stack ALL=(root) NOPASSWD:ALL" | tee -a /etc/sudoers.d/stack; chmod 0440 /etc/sudoers.d/stack

- name: Setup authorized key upload
  authorized_key:
    user: stack
    key: "{{ lookup('file', lookup('env','PUBLIC_KEY')) }}"

- name: Setup tripleo directories
  file:
    path: "{{item}}"
    state: directory
    owner: stack
    group: stack
  with_items:
    - /home/stack/images
    - /home/stack/templates
    - /home/stack/templates/environments
    - /home/stack/templates/firstboot
    - /home/stack/templates/nic-configs
    - /home/stack/alderaan-deploy
    - /home/stack/alderaan-deploy/log
    - "{{log_dir}}"

- name: Install tripleo
  yum: name=python-tripleoclient

- name: Set hostname
  shell: hostnamectl set-hostname {{ansible_fqdn}}

- name: Set transient hostname
  shell: hostnamectl set-hostname --transient {{ansible_fqdn}}

- name: Fix hosts file
  lineinfile:
    dest: /etc/hosts
    line: "127.0.0.1   {{ansible_fqdn}} {{ansible_hostname}} localhost localhost.localdomain localhost4 localhost4.localdomain4"
    regexp: "127.0.0.1"

- name: Copy undercloud.conf
  template:
    src: "templates/undercloud.{{version}}.conf.j2"
    dest: /home/stack/undercloud.conf
    owner: stack
    group: stack

- name: Deploy Private external vlan interface
  template:
    src: templates/ifcfg-vlan.j2
    dest: "/etc/sysconfig/network-scripts/ifcfg-{{external_vlan_device}}"
    owner: root
    group: root
  when: deploy_external_private_vlan | bool

- name: Turn on Private external vlan interface
  shell: ifup {{external_vlan_device}}
  when: deploy_external_private_vlan | bool

- name: Setup traffic fowarding
  shell: "\n
     echo 1 > /proc/sys/net/ipv4/ip_forward \n
     iptables -t nat -A POSTROUTING -o {{public_net_device}} -j MASQUERADE \n
     iptables -A FORWARD -i {{public_net_device}} -o {{external_vlan_device}} -m state --state RELATED,ESTABLISHED -j ACCEPT \n
     iptables -A FORWARD -i {{external_vlan_device}} -o {{public_net_device}} -j ACCEPT"
  when: deploy_external_private_vlan | bool and deploy_external_private_nat | bool

- name: Make sure iptables-services is installed
  yum:
    name: iptables-services
    state: present
  when: deploy_external_private_vlan | bool and deploy_external_private_nat | bool

- name: Save iptables
  shell: service iptables save
  when: deploy_external_private_vlan | bool and deploy_external_private_nat | bool
